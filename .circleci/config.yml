version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10.5.0

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Get dependencies
          command: |
            GOROOT=${HOME}/goroot
            GOPATH=${HOME}/go
            PATH=${GOROOT}/bin:${PATH}
            mkdir ${GOPATH}
            export GOPATH GOROOT PATH

            sudo apt-get update
            sudo apt-get install -y cmake ruby ruby-dev rubygems build-essential wget
            sudo gem install --no-ri --no-rdoc fpm

            cd ${HOME}
            mkdir -p download
            cd download
            wget https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz
            tar xvfz go1.10.3.linux-amd64.tar.gz
            mv go ../goroot

            go get github.com/tcnksm/ghr
      - run: npm install
      - run: npm run installers
      - run: |
          GOPATH=${HOME}/go
          VERSION=$(node scripts/get-version.js)
          mkdir ${GOPATH}
          export GOPATH

          ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./build/artifacts/
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-
      - persist_to_workspace:
          root: ~/repo
          paths: .
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: test
          command: npm test
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /feature.*/
